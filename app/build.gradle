apply plugin: 'com.android.application'
apply plugin: 'android-apt' // 注释处理
apply plugin: 'org.greenrobot.greendao'  // greenDAO
apply plugin: 'com.antfortune.freeline'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    signingConfigs {
        signingConfig {
            keyAlias 'basemodule'
            keyPassword 'basemodule'
            storeFile file('../basemodule.jks')
            storePassword 'basemodule'
        }
    }

    defaultConfig {
        applicationId "com.brilliant"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true // Enabling multidex support.
        versionName APP_VERSION
        resValue("string", 'app_version', APP_VERSION)
        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
        signingConfig signingConfigs.signingConfig
    }

    buildTypes {
        release {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            zipAlignEnabled true // Zipalign优化
            minifyEnabled true // 是否混淆
            shrinkResources true // 是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // mainfest中参数配置
            manifestPlaceholders = [
                    APP_NAME    : "@string/app_name",
                    APP_ICON    : "@mipmap/ic_launcher",
                    // UMENT配置
                    UMENG_APPKEY: "562dd44967e58e4437004451",
                    PACKAGE_NAME: "com.brilliant"
            ]
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "mips", "mips64", "x86", "x86_64"
            }
        }
        debug {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            zipAlignEnabled false // Zipalign优化
            minifyEnabled false // 是否混淆
            shrinkResources false // 是否去除无效的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // mainfest中参数配置
            manifestPlaceholders = [
                    APP_NAME    : "@string/app_name_debug",
                    APP_ICON    : "@mipmap/ic_launcher",
                    // UMENT配置
                    UMENG_APPKEY: "562dd44967e58e4437004451",
                    PACKAGE_NAME: "com.brilliant"
            ]
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "mips", "mips64", "x86", "x86_64"
            }
        }
    }

    greendao {
        //指定数据库schema版本号，迁移等操作会用到
        schemaVersion 1
        //通过gradle插件生成的数据库相关文件的包名，默认为你的entity所在的包名
        //  daoPackage 'cn.sunfit.jifeng.capabilities.db.dao'
        //这就是我们上面说到的自定义生成数据库文件的目录了，可以将生成的文件放到我们的java目录中，而不是build中，这样就不用额外的设置资源目录了
        targetGenDir 'src/main/java'
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/maom']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDir 'src/main/jniLibs'
            //2015-08-09在Androidstudio使用高德地图是加入这一句，否则地图出错
            jniLibs.srcDirs = ['libs']
        }
        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    // productFlavors 定义了一个应用的自定义构建版本
    //一个单一的项目可以同时定义多个不同的 flavor 来改变应用的输出。
    // productFlavors 这个概念是为了解决不同的版本之间的差异非常小的情况，通常用于区分同一个应用的不同渠道/客户等，可包含少量业务功能差别。
    // productFlavors 中的 flavor 不能跟 buildType 中的一样,否则会报: "ProductFlavor names cannot collide with BuildType names"
    productFlavors {
        qq {}
        baidu {}
        wandoujia {}
        xiaomi {}
        anzhi {}
        appchina {}
        "360" {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
    useLibrary 'org.apache.http.legacy'

    // butterKnife和dagger2 注释冲突
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // to resolve-->  Error:Conflict with dependency 'com.google.code.findbugs:jsr305' in project ':app'.
    // Resolved versions for app (3.0.1) and test app (2.0.1) differ. See http://g.co/androidstudio/app-test-app-conflict for details.
    configurations.all {
        //解决 Conflict with dependency 'com.google.code.findbugs:jsr305'
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    // 解决 is not translated in "zh" ，防止自动打包失败
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName
            def timeNow
            def oldFile = output.outputFile
            def outDirectory = oldFile.parent

            if ("true".equals(IS_JENKINS)) {
                timeNow = JENKINS_TIME
                // 使用相对路径，构建后执行的 Execute Windows batch command 脚本为：
                // curl -F "envType=1" -F "prodType=1001" -F "package=@E:\jenkins\workspace\AndroidFilePicker\app\build\outputs\apk\jenkins\filepicker.apk" https://172.16.88.230:8383/apiv1/app/upload --insecure
                outDirectory = outDirectory + '/jenkins'
                // 动态生成安装包名称
//                newName = 'moduleproduct-v' +
//                        APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                // 使用固定的名字，方便jenkins打包完成后自动上传到服务器
                newName = 'moduleproduct.apk'
            } else {
                timeNow = getDate()
                if (variant.buildType.name.equals('debug')) {
                    newName = "moduleproduct-v${APP_VERSION}-debug.apk"
                } else {
                    newName = 'moduleproduct-v' +
                            APP_VERSION + '-' + variant.productFlavors[0].name + timeNow + '-' + variant.buildType.name + '.apk'
                }
            }
            output.outputFile = new File(outDirectory, newName)
        }
    }
}

dependencies {
    //################## 系统级
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:recyclerview-v7:25.3.0'
    compile 'com.android.support:cardview-v7:25.3.0'
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support:design:25.3.0'

    //################## 引入第三方jar包

    //################## git上第三方库
    //=== leakcanary(https://github.com/square/leakcanary)
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    //=== rxjava(https://github.com/ReactiveX/RxJava)
    compile 'io.reactivex:rxjava:1.1.9'
    //=== rxandroid(https://github.com/ReactiveX/RxAndroid)
    compile 'io.reactivex:rxandroid:1.2.1'
    //=== rxbinding(https://github.com/JakeWharton/RxBinding)
    compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    //=== RxLifecycle(https://github.com/trello/RxLifecycle)
    compile 'com.trello:rxlifecycle:1.0'
    compile 'com.trello:rxlifecycle-components:1.0'
    //=== RxPermissions(https://github.com/tbruyelle/RxPermissions)
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.1@aar'

    //=== dagger(https://github.com/google/dagger)
    apt 'com.google.dagger:dagger-compiler:2.6'
    compile 'com.google.dagger:dagger:2.6'

    //=== retrofit(https://github.com/square/retrofit)
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    //=== circleimageview(https://github.com/hdodenhof/CircleImageView)
    compile 'de.hdodenhof:circleimageview:2.1.0'

    //=== slider(https://github.com/daimajia/AndroidImageSlider)
    compile 'com.daimajia.slider:library:1.1.5'
    //=== picasso, slider 库需要用到下面两个库,这样有点多余，可以选择别的库
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.nineoldandroids:library:2.4.0'

    //=== recyclerview-animators(https://github.com/wasabeef/recyclerview-animators)
    compile 'jp.wasabeef:recyclerview-animators:2.2.3'

    //=== html text(https://github.com/zzhoujay/RichText)
    compile 'com.zzhoujay.richtext:richtext:2.0.9'

    //=== LabelView(https://github.com/H07000223/FlycoLabelView)
    compile 'com.flyco.labelview:FlycoLabelView_Lib:1.0.2@aar'

    //=== photoview(https://github.com/chrisbanes/PhotoView)
    compile 'com.github.chrisbanes.photoview:library:1.2.4'

    //=== dragsloplayout(https://github.com/Rukey7/DragSlopLayout)
    compile 'com.github.Rukey7:DragSlopLayout:1.0.3'

    //=== TagLayout(https://github.com/Rukey7/TagLayout)
    compile 'com.github.Rukey7:TagLayout:1.0.3'

    //=== shine button(https://github.com/ChadCSong/ShineButton)
    compile 'com.sackcentury:shinebutton:0.1.6'

    //=== tab layout(https://github.com/H07000223/FlycoTabLayout)
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.0@aar'

    //=== progressbar(https://github.com/daimajia/NumberProgressBar)
    compile 'com.daimajia.numberprogressbar:library:1.2'

    //=== Dialog(https://github.com/H07000223/FlycoDialog_Master)
    compile 'com.flyco.dialog:FlycoDialog_Lib:1.3.2@aar'

    //=== jsoup(https://github.com/jhy/jsoup)
    compile 'com.github.jhy:jsoup:jsoup-1.10.2'

    //=== greendao  (https://github.com/greenrobot/greenDAO)
    compile 'org.greenrobot:greendao:3.2.2'

    //=== file picker(https://github.com/Angads25/android-filepicker)
    compile 'com.github.angads25:filepicker:1.0.6'

    //=== AndroidFilePicker(https://github.com/BrillantZhao/AndroidFilePicker)
    compile 'com.github.BrillantZhao:AndroidFilePicker:1.0.2'

    //=== AndroidBaseModule(https://github.com/BrillantZhao/AndroidBaseModule)
    compile 'com.github.BrillantZhao:AndroidBaseModule:1.1.2.29'

    //=== Butter Knife  (https://github.com/JakeWharton/butterknife)
    // 和Dagger2配合使用需要注意把annotationProcessor改为apt
    compile 'com.jakewharton:butterknife:8.5.1'
    apt 'com.jakewharton:butterknife-compiler:8.5.1'

    //=== AndroidFilePicker
    compile 'com.github.BrillantZhao:AndroidFilePicker:1.0.4'

    //################## 引用第三方工程

}